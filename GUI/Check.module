' Gambas module file

PUBLIC WorkDir AS String = Func.Get_Str("/opt/Customizer/settings.conf", "WORK_DIR=", "/home")

PUBLIC SUB Conf_File()
  Func.Event_Msg("Checking configuration file")
  IF NOT Exist("/opt/Customizer/settings.conf") THEN 
    Message.Warning("Configuration file doesn't exists, creating one with the default values")
    Func.Event_Msg("[TRY] Restore configuration file")
    File.Save("/opt/Customizer/settings.conf", "# Main settings\nWORK_DIR=/home\nMOUNT_DIR=/mnt\n\n# Preferences\nMESSAGES_COLORS=1\nFORCE_CHROOT=0\nAPT_HELPER=1\nRESOLUTION=800x600\nBOOT_FILES=0\nVRAM=256\nCOMPRESSION=xz\nLOCALES=C\n\n# Saved variables\nISO=\nDEB=\nHOOK=\nPIC=")
    
    CATCH 
      Message.Error("Unable to create configuration file, check your permissions")
  ENDIF 
END


PUBLIC SUB X_session()
  DIM Xsessions AS Integer = 0
  
  Func.Event_Msg("Checking for X-sessions links")
  TRY Xsessions = Dir(WorkDir & "/FileSystem/usr/share/xsessions").Count

  IF Xsessions >= 1 THEN
    FMain.Desktop.Enabled = TRUE
  ELSE 
    FMain.Desktop.Enabled = FALSE
  ENDIF 
END

PUBLIC SUB Pkg_Manager()
  Func.Event_Msg("Checking for package-manager")
  IF Exist(WorkDir & "/FileSystem/bin/synaptic") OR Exist(WorkDir & "/FileSystem/bin/aptitude") THEN
    FMain.Archive.Enabled = TRUE
  ELSE IF Exist(WorkDir & "/FileSystem/sbin/synaptic") OR Exist(WorkDir & "/FileSystem/sbin/aptitude") THEN
    FMain.Archive.Enabled = TRUE
  ELSE IF Exist(WorkDir & "/FileSystem/usr/bin/synaptic") OR Exist(WorkDir & "/FileSystem/usr/bin/aptitude") THEN
    FMain.Archive.Enabled = TRUE
  ELSE IF Exist(WorkDir & "/FileSystem/usr/sbin/synaptic") OR Exist(WorkDir & "/FileSystem/usr/sbin/aptitude") THEN
    FMain.Archive.Enabled = TRUE
  ELSE 
    FMain.Archive.Enabled = FALSE
  ENDIF 
END

PUBLIC SUB ISO()
  DIM Dist, Arch, Rel AS String
  
  Func.Event_Msg("Checking ISO image existence")
  Dist = Func.Get_Str(WorkDir & "/FileSystem/etc/lsb-release", "DISTRIB_ID=", "Custom")
  Rel = Func.Get_Str(WorkDir & "/FileSystem/etc/lsb-release", "DISTRIB_RELEASE=", "0.1")
  
  SHELL "chroot '" & WorkDir & "/FileSystem' dpkg --print-architecture" TO Arch
  
  IF Exist(WorkDir & "/" & Dist & "-" & Trim(Arch) & "-" & Rel & ".iso") THEN
    FMain.QEMU.Enabled = TRUE
  ENDIF 
END

PUBLIC SUB Existence()
  Func.Event_Msg("Checking essential directories and files")
  IF Exist(WorkDir & "/FileSystem") AND Exist(WorkDir & "/ISO") THEN 
    IF NOT Exist(WorkDir & "/FileSystem/root") OR NOT Exist(WorkDir & "/FileSystem/etc") OR NOT Exist(WorkDir & "/FileSystem/usr") THEN 
      Message.Error("Some important folders are missing which might be a result\nof unsuccessful cleaning or deletion by accident. Please Clean and\nstart all over again.")
      FMain.Clean.Enabled = TRUE
    ELSE 
      IF NOT Exist(WorkDir & "/FileSystem/etc/casper.conf") OR NOT Exist(WorkDir & "/FileSystem/etc/lsb-release") THEN 
        Message.Error(WorkDir & "/FileSystem/etc/casper.conf or " & WorkDir & "/FileSystem/etc/lsb-release\nare deleted but are very essential for setting up some configuration.\nCreate them using a text editor or clean and start all over again!")
        Func.Disable_Stuff()
        FMain.Clean.Enabled = TRUE
      ELSE 
        'Enable some elements
        Func.Enable_Stuff()
      
        'Get some configuration to display it in the text boxes
        FMain.HostName.Text = Func.Get_Str(WorkDir & "/FileSystem/etc/casper.conf", "export HOST=", "host")
        FMain.LiveCD_User.Text = Func.Get_Str(WorkDir & "/FileSystem/etc/casper.conf", "export USERNAME=", "live")
        FMain.Version.Text = Func.Get_Str(WorkDir & "/FileSystem/etc/lsb-release", "DISTRIB_RELEASE=", "0.1")
        FMain.DistName.Text = Func.Get_Str(WorkDir & "/FileSystem/etc/lsb-release", "DISTRIB_ID=", "Custom")
        
        'Set/Load the release notes URL
        FMain.ReleaseNotesURL.Text = "http://www.ubuntu.com/getubuntu/releasenotes"
        FMain.ReleaseNotesURL.Text = Trim(Func.Load_File(WorkDir & "/ISO/.disk/release_notes_url"))
        
        'Check if previously builded ISO image exists
        Check.ISO()
        
        'Check if DEs/WMs are installed
        Check.X_session()
        
        'Check if package manager is installed installed
        Check.Pkg_Manager()
      ENDIF 
    ENDIF
  ELSE 
    Func.Disable_Stuff()
  ENDIF 
END
